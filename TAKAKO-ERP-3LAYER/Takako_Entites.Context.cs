//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TAKAKO_ERP_3LAYER
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Takako_Entities : DbContext
    {
        public Takako_Entities()
            : base("name=Takako_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<TVC_COMPANY_MS> TVC_COMPANY_MS { get; set; }
        public DbSet<TVC_CUSTOMER_MS> TVC_CUSTOMER_MS { get; set; }
        public DbSet<TVC_PO_MS> TVC_PO_MS { get; set; }
        public DbSet<TVC_SHIPPING_INV_DETAIL> TVC_SHIPPING_INV_DETAIL { get; set; }
        public DbSet<TVC_SHIPPING_MS> TVC_SHIPPING_MS { get; set; }
        public DbSet<TVC_SHIPPING_PL_DETAIL> TVC_SHIPPING_PL_DETAIL { get; set; }
        public DbSet<TVC_PL_DETAIL> TVC_PL_DETAIL { get; set; }
        public DbSet<PRODUCTMF> PRODUCTMFs { get; set; }
        public DbSet<SPRICE_GLOBALMF> SPRICE_GLOBALMF { get; set; }
        public DbSet<CUSTOMMF> CUSTOMMFs { get; set; }
        public DbSet<DESTINATIONMF> DESTINATIONMFs { get; set; }
        public DbSet<PRICE_CONDITIONMF> PRICE_CONDITIONMF { get; set; }
        public DbSet<PAYMENT_TERMMF> PAYMENT_TERMMF { get; set; }
    
        public virtual ObjectResult<SP_TVC_GET_DATA_PO_Result> SP_TVC_GET_DATA_PO(string companyCode, string customerCode, string unitCurrency)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var unitCurrencyParameter = unitCurrency != null ?
                new ObjectParameter("UnitCurrency", unitCurrency) :
                new ObjectParameter("UnitCurrency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TVC_GET_DATA_PO_Result>("SP_TVC_GET_DATA_PO", companyCodeParameter, customerCodeParameter, unitCurrencyParameter);
        }
    }
}
